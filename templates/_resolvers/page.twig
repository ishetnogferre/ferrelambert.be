{# @var craft \craft\web\twig\variables\CraftVariable #}
{#
 # Page Resolver Template
 # --------------------
 #
 # This template gets loaded whenever a full page is requested, either because an
 # entry section's Template setting is set to "_resolvers/page" or using dymanic routes.
 #
 # An `entry` variable will be automatically passed to this template if the URI matches
 # an element URI. Otherwise an `entry` array is created before invoking a view router.
-#}
{% do craft.app.elements.eagerLoadElements(
    className(entry),
    [entry],
    [
        'headerAsset',
    ]
) %}

{% extends '_layouts/site' %}

{# Handle special routes that don’t correspond to Craft entries. #}
{% if entry is not defined %}

    {% set specialRoutes = {} %}

    {% set baseSegmentRoute = specialRoutes[craft.app.request.pathInfo] ?? null %}

    {#
     # Trick the routing precedence logic using a dummy entry.
     #
     # In our case we’re setting `null` values so that we can avoid a twig error when
     # when it processes `entry.section.handle` expressions in the `include` statement.
    -#}

    {% set entry = {
        title: null,
        section: { handle: null },
        type: { handle: null },
    } %}

    {# Set body class #}
    {% set bodyClass = craft.app.request.segments|first %}

{% elseif entry.section.handle ends with 'Index' %}

    {# Set body class for index pages. #}
    {% set bodyClass = entry.section.handle|replace({ 'Index': '' }) %}

{% endif %}

{# Pick title from entries #}
{% set title = entry.title  %}

{% block inline_css %}
    {{ source('_critical/' ~ entry.section.handle ~ "_critical.css", ignore_missing = true) }}
{% endblock %}

{% block header %}
    {% include "_resolvers/header" %}
{% endblock %}

{% block main %}
    {% include "_resolvers/detail" %}
{% endblock %}
